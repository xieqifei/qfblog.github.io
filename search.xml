<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>热盾 微批恩</title>
      <link href="/2019/12/07/re-dun-wei-pi-en/"/>
      <url>/2019/12/07/re-dun-wei-pi-en/</url>
      
        <content type="html"><![CDATA[<h1 id="热盾-微批恩-最新"><a href="#热盾-微批恩-最新" class="headerlink" title="热盾 微批恩 [最新]"></a>热盾 微批恩 [最新]</h1><p>[% qnimg unnamed-6.png %]</p><h2 id="简介："><a href="#简介：" class="headerlink" title="简介："></a>简介：</h2><p>访问来自世界各地的媒体，视频和消息传递应用程序|解锁社交网络|确保您的移动活动安全私密|享受无限的VPN带宽。适用于Android的Hotspot Shield VPN提供Wi-Fi安全，互联网和在线隐私，并可以访问被阻止的内容和应用程序，例如Facebook，Netflix，BBC，Skype和YouTube。一键激活，就可以安全了。</p><ul><li>一般特征</li></ul><p>自动：检测不安全的Wi-Fi以自动启用HTTPS保护，并在您访问某些应用程序或网站时自动解除阻止内容。在其他时间，VPN处于关闭状态（当前，此功能仅适用于部分用户）<br>全面保护：对设备进出的流量进行加密，以实现终极隐私<br>使用银行级别的HTTPS加密保护您的Wi-Fi连接；即使设备安全，您的Wi-Fi网络也可能容易受到攻击<br>防止黑客窃取您的私人信息<br>屏蔽您的IP地址以私密和匿名方式浏览网页<br>轻松切换国家；美国，英国和日本的专用服务器<br>在工作，学校，旅途中或通过飞机Wi-Fi地点解锁Facebook或YouTube，BBC，Netflix和Hulu等网站或应用程序<br>不受限制地访问全球范围内的移动VOIP和消息服务，例如Skype和Viber<br>像代理一样工作，但功能更丰富</p><ul><li>热盾功能</li></ul><p>私人浏览<br>无限带宽<br>虚拟位置<br>在多台设备上使用<br>无广告<br>★★★MOD Lite版本★★★<br>语言：en<br>平台：arm7 +，x86 +<br>破解：无限访问权限，无广告<br>深度优化的图形和应用程序资源<br>彻底阻止了分析工作<br>不受Google服务的限制<br>隐藏的连接质量评估对话框<br>签名已更改</p><h2 id="预览："><a href="#预览：" class="headerlink" title="预览："></a>预览：</h2><p>[% qnimg download-8.jpg %]</p><p>[% qnimg download-8(1).jpg %]</p><p>[% qnimg download-8(2).jpg %]</p><h2 id="下载："><a href="#下载：" class="headerlink" title="下载："></a>下载：</h2><p><a href="https://www.lanzous.com/i7wc8fe" target="_blank" rel="noopener">点击下载 热盾微批恩v730</a></p>]]></content>
      
      
      <categories>
          
          <category> 安卓软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微批恩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>赛风微批恩</title>
      <link href="/2019/12/07/sai-feng-wei-pi-en-v253/"/>
      <url>/2019/12/07/sai-feng-wei-pi-en-v253/</url>
      
        <content type="html"><![CDATA[<h1 id="Psiphon-Pro-Internet-Freedom-VPN-移除广告-持续更新"><a href="#Psiphon-Pro-Internet-Freedom-VPN-移除广告-持续更新" class="headerlink" title="Psiphon Pro Internet Freedom VPN [移除广告] [持续更新]"></a>Psiphon Pro Internet Freedom VPN [移除广告] [持续更新]</h1><img src="http://qn.xieqifei.com/static/images/unnamed-94.png"><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>已删除广告并无限使用Psiphon Pro。</p><p>全球200多个国家/地区的数百万人已经使用赛风（互联网上最强大的规避工具）连接到Internet。无论您身在何处，赛风都能帮助您访问被审查，屏蔽或无法使用的网站和服务。无论您是今天无法访问自己喜欢的新闻广播，还是想在使用公共Wi-Fi服务时提供更多保护，Psiphon都是访问开放Internet的最佳工具。</p><h2 id="截图"><a href="#截图" class="headerlink" title="截图"></a>截图</h2><img src="http://qn.xieqifei.com/static/images/unnamed(1).png"><img src="http://qn.xieqifei.com/static/images/unnamed(2).png"><img src="http://qn.xieqifei.com/static/images/unnamed.png"><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p><a href="https://www.lanzous.com/i7w39vc" target="_blank" rel="noopener">点击下载 赛风v253</a></p>]]></content>
      
      
      <categories>
          
          <category> 安卓软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微批恩 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓编程笔记</title>
      <link href="/2019/11/18/chong-wen-an-zhuo-bian-cheng/"/>
      <url>/2019/11/18/chong-wen-an-zhuo-bian-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-前言"><a href="#第一章-前言" class="headerlink" title="第一章 前言"></a>第一章 前言</h1><p>大概在两年前，我第一次决定学习安卓编程，在大约两三周的学习之后，由于缺乏JAVA开发基础和经验，单纯的视频教程看得我云里雾里，不过在此期间学会了使用代码进行页面布局，这给我此后学习Web编程，使用html、css进行页面布局打下了基础。</p><p>两年前，我使用的还是联想的i5五系列cpu、机械硬盘、4g内存，这个电脑配置使得我当时用eplise开发安卓程序非常麻烦，打开一个安卓虚拟机需要花很长的时间。半年前，我更换了Surface，用上了8+128G内存+固态硬盘。也更新了最新的i5八系列cpu，电脑配置有了显著提高，运行安卓开发程序也游刃有余了。</p><p>而这次重启安卓学习之旅，我将使用AS进行安卓开发。虽然AS目前已支持C/C++做程序开发，但我仍将选择JAVA作为开发语言，以提高我的JAVA水平。</p><h1 id="第二章-安装Android-Studio"><a href="#第二章-安装Android-Studio" class="headerlink" title="第二章 安装Android Studio"></a>第二章 安装Android Studio</h1><p>从 <a href="https://developer.android.com/studio" target="_blank" rel="noopener">https://developer.android.com/studio</a> 下载IDE和SDK后，进行相应安装和配置。安装教程，从网课和CDSN论坛均可找到。不再赘述。</p><p>此处说明安装时遇到的坑。</p><ol><li><p>SDK安装后，在SDK管理工具中添加SDK目录即andriod-sdk提示<code>android sdk location should not contain whitespace</code></p></li><li><p>问题1解决后紧接着出现提示<code>Target folder is neither empty nor does it point to an existing SDK installtion.</code></p></li></ol><p>问题分析和解决办法：</p><ol><li>提示意思为SDK的目录路径中出现空格。在我的问题中是，Program Files文件夹名称中间有空格，于是我在根路径重新创建了一个以Andriod为名的文件夹，并将andriod-sdk移到此路径下。</li><li>提示为，选择的文件夹既不是空的也不是sdk的文件夹，原因是我将sdk目录指向了Andriod为名的文件夹，正确的路径是上步创建Andriod文件下的andriod-sdk。</li></ol><p>安装好SDK后，还要给AS安装虚拟机，运行AS后，在Tools菜单下找到AVD Manager（虚拟机管理器），添加合适分辨率、Andriod版本的虚拟机即可。</p><h1 id="第三章-应用的资源访问"><a href="#第三章-应用的资源访问" class="headerlink" title="第三章 应用的资源访问"></a>第三章 应用的资源访问</h1><h2 id="3-1-认识Android目录"><a href="#3-1-认识Android目录" class="headerlink" title="3.1 认识Android目录"></a>3.1 认识Android目录</h2><ol><li><p>res资源</p><ul><li>drawable-？dpi（l,h,m,x）：不同分辨率下的资源文件，如图片的大小。</li><li>values：安卓应用界面上需要显示的各类文本标签文字。</li><li>layout：界面布局文件。</li><li>menu：存放菜单</li></ul></li><li><p>gen（ADT中）或JAVA（AS中）</p><p>由IDE自动生成的包文件</p></li></ol><h2 id="3-2-通用资源访问"><a href="#3-2-通用资源访问" class="headerlink" title="3.2 通用资源访问"></a>3.2 通用资源访问</h2><ol><li><p>基于Java代码访问资源</p><ul><li><p>Java代码访问方式:</p><pre class="line-numbers language-java"><code class="language-java">    <span class="token punctuation">[</span>\<span class="token operator">&lt;</span>packge<span class="token operator">-</span>name<span class="token operator">></span><span class="token punctuation">.</span><span class="token punctuation">]</span>R<span class="token punctuation">.</span>   <span class="token comment" spellcheck="true">//R类所在包路径可省略</span>     <span class="token operator">&lt;</span>resource_type<span class="token operator">></span><span class="token punctuation">.</span>&lt;resource_name<span class="token operator">></span>  <span class="token comment" spellcheck="true">//resource_type：资源类型如color等。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>Java访问示例</p></li><li><p>//从drawable目录中加载图片，设置为背景图片</p><pre class="line-numbers language-java"><code class="language-java"><span class="token function">getWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setBackgroundDrawableResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>drawable<span class="token punctuation">.</span>back<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>//从string设置字符串资源，设置为文本框的显示内容</p><pre class="line-numbers language-java"><code class="language-java">TextView title<span class="token operator">=</span><span class="token punctuation">(</span>TextView<span class="token punctuation">)</span><span class="token function">findViewById</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>  title<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>string<span class="token punctuation">.</span>titleinfo<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li><li><p>在XML配置文件中访问资源</p><ul><li><p>XML资源访问方式:</p><pre class="line-numbers language-xml"><code class="language-xml">@[<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>package_name</span><span class="token punctuation">></span></span>:]<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource_type</span><span class="token punctuation">></span></span>/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource_name</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>XML资源定义示例</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> blue <span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>#ff00ff<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> title <span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>  Confirmation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在XML中使用资源示例</p><ul><li>XML资源使用实例片段</li></ul><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span> <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>match_parent<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> @string/title<span class="token punctuation">"</span></span>          <span class="token attr-name"><span class="token namespace">android:</span>textColor</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> @color/blue<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>EditText</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ol><h2 id="3-3-安卓中字符串、颜色和尺寸应用"><a href="#3-3-安卓中字符串、颜色和尺寸应用" class="headerlink" title="3.3 安卓中字符串、颜色和尺寸应用"></a>3.3 安卓中字符串、颜色和尺寸应用</h2><ol><li><p>资源列表</p><p>字符串、颜色、尺寸资源，存放在XML文件内，位于/res/values目录下。</p><p>如字符串资源：/res/values/strings.xml。R类中名称：R.string</p></li><li><p>颜色表示方法</p><ul><li><p>使用Color类的常量</p><p>如：<code>int color = Color.BLUE;//创建一个蓝色</code></p></li><li><p>使用Color类的静态方法argb创建颜色</p><p><code>int color = Color.argb\(127.255.0.255\);//半透明紫色</code></p></li><li><p>在XML资源文件定义颜色值</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>color</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> blue <span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>#ff00ff<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>color</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>string</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span> title <span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>  Confirmation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>string</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>使用示例</p></li><li><p>res和assets区别</p><ul><li><p>res内的文件被映射到R.java，基于资源ID直接访问。</p></li><li><p>assets需通过资源管理器访问。</p></li><li><p>res下不可以创建子目录，assets可以有目录结构。</p></li><li><p>读取文件资源的方式不同</p><ul><li><p>读取res/raw下的文件资源，通过当前Activity中的<code>getResources()</code>方法：</p><pre class="line-numbers language-java"><code class="language-java">InputStream is <span class="token operator">=</span> <span class="token function">getResources</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">openRawResource</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>id<span class="token punctuation">.</span>filename<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>读取assets下的文件资源，通过当前活动的资源管理器assetmanager读取相应的资源文件：</p><pre class="line-numbers language-java"><code class="language-java">AssetManager am <span class="token operator">=</span> <span class="token function">getAssets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//通过当前的Activity的getAsset()方法。</span>InputStream is <span class="token operator">=</span> am<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"filename"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//基于文件名读取资源。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ul></li></ul></li></ol><h2 id="3-4-Drawable资源"><a href="#3-4-Drawable资源" class="headerlink" title="3.4 Drawable资源"></a>3.4 Drawable资源</h2><ol><li><p>Drawable资源</p><ul><li><p>主要是需要绘制的资源，比如图片资源。</p></li><li><p>主要格式有*.png、*.jpg等。</p></li><li><p>图片放入/res/drawable-xxx目录下。</p></li><li><p>安卓SDK会在编译应用自动加载图片。</p></li><li><p>资源文件在R.java资源类中生成该资源的索引。</p></li></ul></li><li><p>Drawable资源类型</p><ul><li>StateListDrawable资源（动态切换背景）</li><li>LayerDrawable资源（图层叠加）</li><li>ShapeDrawable资源（绘图）</li><li>ClipDrawable资源</li><li>AnimationDrawable资源（动画）</li></ul></li></ol><h2 id="3-5-安卓项目布局文件"><a href="#3-5-安卓项目布局文件" class="headerlink" title="3.5 安卓项目布局文件"></a>3.5 安卓项目布局文件</h2><ol><li><p>什么是安卓布局文件？</p><ul><li>定义用户界面上各个组建之间的组织结构。</li><li>XML格式文件，安卓系统负责初始化。</li><li>实现界面布局和逻辑代码的分离。</li><li>修改和更新界面非常简便，无需修改代码。</li><li>布局文件是树形结构，使用根节点。</li><li>一般在布局控件中放置界面显示组建LinearLayout中放入textview文本标签</li><li>通过节点属性设置显示界面组建的属性：大小、颜色和边距等。</li></ul></li><li><p>布局示例</p></li><li><p>布局文件节点属性示例</p><p><code>android:id=&quot;@+id/button_id&quot;</code></p><ul><li>@表示XML解析器应该解析ID字符串把它作为ID资源。</li><li>+符号表示一个新的资源名字，会被创建且加入到资源列表中（R.java）</li><li>@string/@color等可用于访问其他资源。</li><li>组建id在android应用中是唯一的。</li></ul></li></ol><table><thead><tr><th>主题</th><th align="left">内容</th></tr></thead><tbody><tr><td>资源位置</td><td align="left">res/layout/my_layout.xml</td></tr><tr><td>布局XML文件格式</td><td align="left">使用&lt;?xml version= “1.0”encoding=”utf-8” ?&gt;<br>&lt;布局类xmlns:android=”<a href="http://schemas.android" target="_blank" rel="noopener">http://schemas.android</a>.<br>Com/apk/res/android” id= “@id+/string_na<code>&lt;br&gt;</code>me”(属性)&gt;<br>&lt;视图组件或者其他嵌套布局类&gt;<br>&lt;requestFocus/&gt;<br>&lt;/布局类&gt;</td></tr><tr><td>获得XML资源的方法</td><td align="left">Activity.setContentView()</td></tr><tr><td>引用XML资源的格式</td><td align="left">Java代码中：R.layout.my_layout。<br>XML文件中：@[package:]layout/my_layout</td></tr><tr><td>资源位置</td><td align="left">res/layout/my_layout.xml</td></tr></tbody></table><h2 id="3-6-AndroidManifest-xml项目配置文件"><a href="#3-6-AndroidManifest-xml项目配置文件" class="headerlink" title="3.6 AndroidManifest.xml项目配置文件"></a>3.6 AndroidManifest.xml项目配置文件</h2><ol><li><p>什么是AndroidManifest.xml</p><p>位于根目录下，文件名不可修改。</p><p>该文件中 &lt;manifest&gt;和 &lt;application&gt;是必需的且只能出现一次。</p></li><li><p>描述Android应用使用的组建和系统配置信息</p><ul><li>应用使用的组建及其实现类（Activity/Service等）</li><li>需要使用的安卓系统权限。</li><li>声明其他应用程序与该应用程序交互需要的权限</li><li>该应用程序所需的安卓API版本。</li><li>列出该应用程序所需类库。</li></ul></li></ol><h1 id="第四章-界面编程任务分析与设计"><a href="#第四章-界面编程任务分析与设计" class="headerlink" title="第四章 界面编程任务分析与设计"></a>第四章 界面编程任务分析与设计</h1><h2 id="4-1-循序渐进"><a href="#4-1-循序渐进" class="headerlink" title="4.1 循序渐进"></a>4.1 循序渐进</h2><ol><li><p>Activity简介</p><ul><li>安卓的视图组件，四大组件之一。</li><li>定义用户可以看到触摸到的界面。</li><li>活动内使用各种界面组件，实现交互动作。</li><li>通过活动，用户界面之间切换跳转、进行数据传递。</li></ul></li><li><p>Activity概念</p></li></ol><ul><li>用来包装用户界面组件的容器，实现用户和界面组件之间的交互。</li></ul><ol start="3"><li><p>案列分析教学特点和注意事项</p><ul><li>界面编程案例分析教学特点<ul><li>案例：基于安卓系统的计算器</li><li>特点：案例驱动，实践先行</li><li>优势：在实践中学习抽象的概念</li></ul></li><li>界面编程案例分析注意事项<ul><li>知识要点：活动的概念和使用</li><li>分析技巧：如何将实际中的问题进行分析；分析问题和解决问题的方法</li><li>编码技巧：在案例中学习编码技巧</li></ul></li></ul></li><li><p>计算器案例</p><ul><li><p>操作过程：</p><ol><li><p>用户输入两个计算数；</p></li><li><p>选择计算类型；</p></li><li><p>点击计算按钮，进行计算</p></li><li><p>将结果展示给用户</p></li></ol></li></ul></li></ol><h2 id="4-2-活动的创建和使用"><a href="#4-2-活动的创建和使用" class="headerlink" title="4.2 活动的创建和使用"></a>4.2 活动的创建和使用</h2><ol><li><p>创建活动应用程序</p><ul><li>应用程序通常由多个活动松耦合的组成</li><li>活动是界面上的组件在屏幕上展示的容器</li><li>活动通过布局文件展示界面布局的内容</li><li>活动的生命周期，利用周期的方法扩展</li></ul></li><li><p>创建活动步骤</p><ul><li>声明活动类名，继承于活动</li><li>实现<code>onCreate(Bundle bundle)</code>方法，在系统初始化完成活动对象之后，进行用户自定义的初始化活动</li><li>在<code>onCreate(View view)</code>设置用户界面的布局文件</li><li>通过活动中的<code>findViewById(int id)</code>获取各个界面组件，并基于其属性和方法进行相应的操作</li><li>如果需要在销毁活动进行处理，可以实现<code>onDestroy()</code>的方法。</li></ul></li></ol><h2 id="4-3-活动的声明和配置"><a href="#4-3-活动的声明和配置" class="headerlink" title="4.3 活动的声明和配置"></a>4.3 活动的声明和配置</h2><ol><li><p>活动的声明和配置</p><ul><li><p>活动定义后需在AndroidManifest.xml中声明</p></li><li><p>`&lt;application…/&gt;·节点内添加·&lt;activity…/&gt;·子元素</p></li><li><p>在<code>&lt;activity&gt;</code>子节点内定义Activity的类型（入口活动）</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span>activity android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"com.quck.android.calculator"</span>    android<span class="token operator">:</span>icon<span class="token operator">=</span><span class="token string">"@drawable/pic.png"</span>        android<span class="token operator">:</span>label<span class="token operator">=</span><span class="token string">"@string/app_name"</span> <span class="token operator">></span>            <span class="token comment" spellcheck="true">//略去其中内容</span><span class="token operator">&lt;</span><span class="token operator">/</span>activity<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li><li><p>配置活动——示例分析</p><p>活动的主要配置属性有如下三个：</p><ul><li><p>name：指定该活动的类名</p></li><li><p>icon：是定该活动对象的图标（可选）</p></li><li><p>label：指定该活动的标签</p></li><li><p>在<code>&lt;activity&gt;</code>节点中指定一个或者多个<code>&lt;intent-filter.../&gt;</code>元素Intent的类型和Action决定活动是否会接收消息。</p></li></ul></li></ol><h2 id="4-4-活动之间的数据交换和调用"><a href="#4-4-活动之间的数据交换和调用" class="headerlink" title="4.4 活动之间的数据交换和调用"></a>4.4 活动之间的数据交换和调用</h2><ol><li><p>活动之间的数据交换和调用</p><ul><li>活动之间跳转，需传递数据信息</li><li>通过Intent来进行数据传递</li><li>数据需要放入Intent或者Bundle之内</li></ul></li><li><p>什么是Bundle？</p></li></ol><ul><li>Bundle类是一个key-value对，一个映射，把字符串映射为各种类型。</li></ul><ol start="3"><li><p>数据交换</p><ul><li>写入数据<ul><li><code>putExtras(Bundle data)</code>向Intent中放入需要携带的Bundle数据</li><li><code>putXXX(String key, Xxx data)</code>向Bundle放入Int,Long,String等各种类型的数据</li><li><code>putSerializable(String key, Serialzable data)</code>:向Bundle中放入一份可序列化对象</li></ul></li><li>读取数据<ul><li><code>getExtras()</code>从Intent中读取需要携带的Bundle数据</li><li><code>getXXX(String key)</code>从Bundle，Intent读取int,Long,String等各种类型的数据</li><li><code>getSerializable(String key)</code>从Bundle，Intent中读取一个可序列化的对象</li></ul></li><li>活动交换示例</li><li>Intent vs Bundle<ul><li>相同点：传递数据时，作用相同</li><li>不同点：在多个活动之间传递相同数据时，推荐使用Bundle来储存和传递数据，减少重复的读写操作</li><li>例：活动跳转A-&gt;B-&gt;C传递相同数据<ul><li>如果使用Intent，则需要在A、B、C的Intent之间进行数据的复制</li><li>如果使用Bundle，则可直接传递Bundle对象即可</li></ul></li></ul></li></ul></li><li><p>返回数据</p><ul><li><p><code>startActivityForResult(Intent intent, int requestCode)</code></p><p>跳转到指定的活动</p><p>参数intent：指定目的活动类名</p><p>参数requestCode：由程序中自定义的识别码，用以区分不同的七点活动</p></li><li><p><code>setResult(int resultCode, Intent data)</code></p><p>设置resultCode表示结果的Activity，第二个参数保存传递的结果数据</p></li><li><p><code>onActivityResult(int requestCode, int resultCode, Intent data)</code></p><p>参数requestCode：起点活动定义唯一值</p><p>参数resultCode：目的活动定义的唯一标识值</p><p>参数data：从墓地活动返回的数据</p></li></ul></li><li><p>数据使用步骤</p><ul><li>起点活动，调用<code>startActivityForResult()</code>跳转目的活动</li><li>在目的活动中调用<code>setResult()</code></li><li>在起点活动覆写<code>onActivityResult()</code>在方法内获取目的活动返回的数据</li></ul></li></ol><h1 id="第五章-服务开发和广播事件"><a href="#第五章-服务开发和广播事件" class="headerlink" title="第五章 服务开发和广播事件"></a>第五章 服务开发和广播事件</h1><h2 id="5-1-循序渐进"><a href="#5-1-循序渐进" class="headerlink" title="5.1 循序渐进"></a>5.1 循序渐进</h2><ul><li><p>案列：音乐播放器</p><ul><li><p>任务概述</p></li><li><p>功能分析</p><p>界面设计</p><p>实现暂停、播放和停止</p><p>播放同时，显示歌手和音乐名称</p></li><li><p>用户界面设计</p><p>主界面</p></li><li><p>技术要点</p><p>服务的创建、调用</p><p>服务和活动之间的通信</p><p>Intent对象的使用</p></li><li><p>案例演示</p></li></ul></li><li><p>案例任务分析和设计</p><p>音乐播放器界面分析</p></li><li><p>核心代码设计和实现</p><p>核心代码编写步骤：</p><ol><li>创建安卓项目MusicBox</li><li>在res/loyout目录，创建播放器的主界面布局文件</li><li>定义一个MusicBoxContant的常量类存放程序中用到的静态或不变的信息</li><li>创建音乐播放器的服务类</li><li>在全局配置文件中，声明服务类</li><li>定义实现音乐播放器的主界面</li><li>定义事项ActicityReciver事件接收器，接受音乐服务状态变化广播事件的接收器</li><li>定义实现按钮事件接收器，播放和停止按钮，发送广播事件</li></ol></li></ul><h2 id="5-2-安卓中的系统服务"><a href="#5-2-安卓中的系统服务" class="headerlink" title="5.2 安卓中的系统服务"></a>5.2 安卓中的系统服务</h2><ul><li><p>安卓将诸多常用功能内置为系统服务</p></li><li><p>提供简单的获取系统服务的方式</p></li><li><p>系统服务涵盖了安卓绝大部分常用功能，如，拨打电话，发送短信</p></li></ul><ol><li><p>安卓中获取系统服务</p><ul><li><p>获取系统服务代码示例</p><p><code>TelephonyManager phoneManager=(TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);</code></p></li><li><p>强制类型转化</p><ul><li>在程序运行过程中，将父类型对象转化为子类型对象。</li><li>由于子类型相比父类型的内涵丰富，属性方法更多，所以要把父类型转化为子类型时，需要强制转化，成为强制类型转换。</li><li>并不是所有父类型都可以转化为子类型，要根据具体的使用情况来做具体的判断。</li></ul></li></ul></li></ol><h2 id="5-3-广播接收机制"><a href="#5-3-广播接收机制" class="headerlink" title="5.3 广播接收机制"></a>5.3 广播接收机制</h2><ol><li><p>广播消息</p><ul><li>广播是一种在应用程序之间传输信息的计指</li><li>BroadcastReceiver广播接收者</li><li>广播消息Intent（消息载体）</li><li>被订阅广播的多个广播接收者接收</li><li>消息订阅者不了解发送者</li></ul></li><li><p>广播接收者</p><ul><li>BroadcastReceiver对发出的广播事件进行过滤，应用程序通知其他应用程序某些数据已经下载完毕。</li><li>广播接收者没有图形界面</li><li>广播可以有多个接收者，彼此不知晓。广播接收者之间匿名</li></ul></li><li><p>监听广播机制</p><ul><li>广播和事件监听器是分离的</li><li>通过安卓系统进行广播、接收广播事件</li><li>注册和移除监听通过安卓系统来完成</li><li>安卓系统提供很多广播定义在<code>android.content.Intent</code>类中</li></ul></li><li><p>广播方法</p><p><code>sendBroadcast()</code>:普通模式</p><ul><li>所有注册了广播的接收者会获得事件通知</li><li>接收者接受顺序不确定并发地在各自的应用进程中执行</li><li>接收者和发送者不知晓</li></ul><p><code>sendOrderedBroadcast()</code>:有序广播模式</p><ul><li><p>接收者依照设定的优先级高低依次接受</p></li><li><p>高优先级接收者可以中断后续广播的接收，<code>BroadcastReceiver.abortBroadcast()</code>终止这个广播事件的传播，低优先级的触发器组件不再有机会接收</p></li><li><p>高优先级接收者可添加额外信息给后续接收者</p><p><code>BroadcastReceiver.setResult()</code></p></li></ul></li><li><p>监听广播实现</p><ul><li>获取广播事件的消息接口名称</li><li>事件定制的广播接收器，添加相应的处理逻辑</li><li>注册广播接收器到安卓系统中</li></ul></li><li><p>监听广播实现示例</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyBroadcastReceiver</span> <span class="token keyword">extends</span> <span class="token class-name">BroadcastReceiver</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//action名称，此为固定的字符</span>String SMS_RECEIVED<span class="token operator">=</span><span class="token string">"android.provider.Telephony.SMS_RECEIVED"</span><span class="token punctuation">;</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onReceive</span><span class="token punctuation">(</span>COntext context<span class="token punctuation">,</span> Intent intent<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//如事件有短信接收，则执行</span><span class="token keyword">if</span><span class="token punctuation">(</span>intent<span class="token punctuation">.</span><span class="token function">getAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">quals</span><span class="token punctuation">(</span>SMS_RECEIVED<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//进行短信接收到之后的逻辑处理</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>监听广播注册</p><p>在manifest中注册监听器</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>声明接收器<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>receiver android<span class="token operator">:</span>name <span class="token operator">=</span> <span class="token string">".MyBroadReceiver"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>接收事件的过滤条件声明和优先级<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>intent<span class="token operator">-</span>filter android<span class="token operator">:</span>priority<span class="token operator">=</span><span class="token string">"1000"</span><span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>支持接收的事件类型<span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>action android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.provider.Telephony.SMS_RECEIVED"</span><span class="token operator">/</span><span class="token operator">></span>     <span class="token operator">&lt;</span><span class="token operator">/</span>intent<span class="token operator">-</span>filter<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>receiver<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>监听系统级事件，需要相应的权限：接收者和发送短信的权限<span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.RECEIVE_SMS"</span><span class="token operator">/</span><span class="token operator">></span>    <span class="token operator">&lt;</span>uses<span class="token operator">-</span>permission android<span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">"android.permission.SEND_SMS"</span><span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在运行代码中注册广播监听器</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//创建监听器对象</span>MyBroadcastReceiver myMsgInfoReceiver<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">MyBroadcastReceiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//声明IntentFilter，描述可以接收的广播消息</span>IntentFilter intentFilter<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">IntentFilter</span><span class="token punctuation">(</span><span class="token string">"android.provider.Telephony.SMS_RECEIED"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调用Activity的方法，注册监听器</span><span class="token function">registerReceiver</span><span class="token punctuation">(</span>mBatteryInfoReceiver<span class="token punctuation">,</span>intentFilter<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>广播事件生命周期</p><ul><li>广播消息到来，新建BroadcastReceiver对象</li><li>调用<code>onReceive()</code>方法，执行操作</li><li>操作完成后，对象被销毁</li><li>事件出发—&gt;创建事件监听器对象—&gt;调用监听器的<code>onReceiver()</code>—&gt;销毁事件监听器的对象—&gt;结束操作，返回</li></ul></li><li><p>广播事件注意事项</p><ul><li>在广播接收器中响应逻辑中不能执行比较耗时的操作</li><li>在onReceive()方法中执行超过10秒，就会弹出无响应对话框。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 安卓编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zaltv激活码和软件下载</title>
      <link href="/2019/10/26/zaltv-ji-huo-ma-he-ruan-jian-xia-zai/"/>
      <url>/2019/10/26/zaltv-ji-huo-ma-he-ruan-jian-xia-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="Zaltv介绍"><a href="#Zaltv介绍" class="headerlink" title="Zaltv介绍"></a>Zaltv介绍</h1><p><img src="ZalTV-IPTV-Player.jpg" alt="ZalTV-IPTV-Player"></p><p>  ZalTV Player是一个简单的媒体播放器，可让您在Android设备上流式传输IPTV频道。该应用程序本身不包含任何播放列表。您必须使用ZalTV Player购买和配置M3U播放列表，才能观看直播电视频道。该应用程序仅适用于Android OS平台。在本文中，我们将展示如何使用ZalTV App在Android设备上观看直播电视频道。在Android设备上，ZalTV可以在Google Play商店中正式使用。</p><hr><h1 id="Zaltv下载地址"><a href="#Zaltv下载地址" class="headerlink" title="Zaltv下载地址"></a>Zaltv下载地址</h1><p><a href="https://www.lanzous.com/i6j1ouf" target="_blank" rel="noopener">点击下载</a></p><hr><h1 id="激活码"><a href="#激活码" class="headerlink" title="激活码"></a>激活码</h1><h3 id="12月7日更新："><a href="#12月7日更新：" class="headerlink" title="12月7日更新："></a>12月7日更新：</h3><blockquote><p>激活码: 4880464460 [ 截止日期 2020-01-01 ]<br>激活码: 2077068515 [ 截止日期 2020-03-18 ]<br>激活码: 8588896300 [ 截止日期 2020-08-11 ]<br>激活码: 3022641698 [ 截止日期 2020-10-21]<br>激活码: 4517948230 [ 截止日期 2020-09-20 ]<br>激活码: 7035769449 [ 截止日期 2020-03-03 ]<br>激活码: 5406298864 [ 截止日期 2020-08-01 ]<br>激活码: 3168129372 [ 截止日期 2020-08-01 ]<br>激活码: 3493953518 [ 截止日期 2021-05-12 ]</p></blockquote><h3 id="11月6日更新："><a href="#11月6日更新：" class="headerlink" title="11月6日更新："></a>11月6日更新：</h3><blockquote><p>激活码：7035769449 [ 结束2020-03-03 ]<br>激活码：5168298372 [ 结束2020-08-01 ]<br>激活码：3168129372 [ 结束2020-08-01 ]<br>激活码：5699289400 [ 结束2019-11-06 ]<br>激活码：8928082339 [ 结束2019-11-08 ]<br>激活码：3493953518 [ 结束2021-05-12 ]</p></blockquote><h3 id="10月26日更新："><a href="#10月26日更新：" class="headerlink" title="10月26日更新："></a>10月26日更新：</h3><blockquote><p>代码：5752961577 [ 到期2019-10-30 ]<br>代码：5938564860 [ 到期2020-05-02 ]<br>代码：2967738462 [ 到期2020-05-02 ]<br>代码：9474932252 [ 到期2020-10-03 ]<br>代码：9554214597 [ 到期2020-10-08 ]<br>代码：5380913556 [ 到期2022-02-22 ]<br>代码：2093561765 [ 到期2019-11-30 ]<br>代码：2933044691 [ 到期2020年5 月2日 ]<br>代码：8581970251 [ 到期2019-11-30 ]<br>代码：2025014693 [ 到期2020-08-01 ]<br>代码：6031767558 [ 到期2020年9月13日 ]<br>代码：4686767570 [ 到期2020-09-20 ]</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 安卓软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Zaltv </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo的matery主题折腾记录</title>
      <link href="/2019/10/25/zhu-ti-zhe-teng-ji-lu/"/>
      <url>/2019/10/25/zhu-ti-zhe-teng-ji-lu/</url>
      
        <content type="html"><![CDATA[<h2 id="一、导航菜单文字不清晰"><a href="#一、导航菜单文字不清晰" class="headerlink" title="一、导航菜单文字不清晰"></a>一、导航菜单文字不清晰</h2><p><strong>导航文字不清晰，主要是由于导航菜单设置了透明度引起的。</strong>导航菜单透明，会造成导航栏上的文字不清晰，会和底部图画形成重影，不好看。因此我通过浏览器检查功能，找到了这个透明度的源码。在CSS中，是bg-color这个类里，opacity这个属性导致的。<br><strong>修改办法</strong>：打开matery.ccs文件第166行。</p><blockquote><p>.bg-color{<br>background-image: linear-gradient( to right, #4caf50 0%, #26a69a 100% );<br>    opacity: 0.7;<br>}</p></blockquote><p>将0.7改为1。导航菜单文字顿时变得更清晰了。</p><h2 id="二、给文章添加valine评论功能"><a href="#二、给文章添加valine评论功能" class="headerlink" title="二、给文章添加valine评论功能"></a>二、给文章添加valine评论功能</h2><p>进入主题文件的配置文件<strong>D:\blog\themes\matery_config.yml</strong>。启用valine，其中需要设置Appid和appkey。此两项需要到<a href="https://leancloud.cn/" target="_blank" rel="noopener">Leancloud官网</a>下载。<br><img src="1.png" alt><br>注册和身份验证通过后，新建应用，名字随意起。<br><img src="2.jpg" alt><br>再将信息填入</p><blockquote><p>valine:<br>  enable: true<br>  appid:  your app id<br>  appkey: your app key<br>  notify: false # mail notifier , <a href="https://github.com/xCss/Valine/wiki" target="_blank" rel="noopener">https://github.com/xCss/Valine/wiki</a><br>  verify: false # Verification code<br>  placeholder: just so so<br>  guest_info: nick,mail,link<br>  pageSize: 10</p></blockquote><h2 id="三、修改搜索框CSS样式"><a href="#三、修改搜索框CSS样式" class="headerlink" title="三、修改搜索框CSS样式"></a>三、修改搜索框CSS样式</h2><p>为了让搜索框更好看，我修改了搜索框的CSS样式。<br>修改前：<br><img src="3.png" alt><br>修改后：<br><img src="4.png" alt><br><strong>修改内容</strong>：</p><blockquote><p>#searchModal {<br>    min-height: 500px;<br>    width: 80%;<br>    background-color: rgba(0,0,0,0.8);<br>}</p><p>#searchInput {<br>    color: #fff;<br>}</p><p>#searchModal .search-header .title {<br>    font-size: 1.6rem;<br>    color: coral;<br>}</p></blockquote><h2 id="四、修改了网站名称字体颜色"><a href="#四、修改了网站名称字体颜色" class="headerlink" title="四、修改了网站名称字体颜色"></a>四、修改了网站名称字体颜色</h2><blockquote><p>header .brand-logo .logo-span {<br>    font-size: 2.5rem;<br>    font-family: 楷体;<br>    color: red;<br>}</p></blockquote><h2 id="五、去掉valine评论中的版权信息"><a href="#五、去掉valine评论中的版权信息" class="headerlink" title="五、去掉valine评论中的版权信息"></a>五、去掉valine评论中的版权信息</h2><p><img src="5.png" alt><br>valine评论框里的版权信息，不是那么美观，而且占用网页空间。不如把他去掉吧。<br>找到valine的js文件存放地址<strong>D:\blog\themes\matery\source\libs\valine</strong>，这个文件夹下有两个文件。</p><ul><li>av-min.js</li><li>Valine.min.js</li></ul><p>使用记事本打开<strong>Valine.min.js</strong>文件。查找<strong>Powered</strong>关键词，定位到版权信息的位置。<br>删除以下内容</p><pre><code>    &lt;div class=&quot;info&quot;&gt;&lt;div class=&quot;power txt-right&quot;&gt;Powered By &lt;a href=&quot;https://valine.js.org&quot; target=&quot;_blank&quot;&gt;Valine&lt;/a&gt;&lt;br&gt;v&#39;+o+&quot;&lt;/div&gt;&lt;/div&gt;&quot;</code></pre><p>同时由于删除了代码 <code>&lt;/a&gt;&lt;br&gt;v</code> 后面的<code>&#39;</code>符号，需在删除的位置添加一个<code>&#39;</code>符号，否则代码是错误的。<br>修改后效果：<br><img src="6.png" alt></p><hr><h2 id="六、修改头部幻灯片滤镜颜色和透明度"><a href="#六、修改头部幻灯片滤镜颜色和透明度" class="headerlink" title="六、修改头部幻灯片滤镜颜色和透明度"></a>六、修改头部幻灯片滤镜颜色和透明度</h2><p>打开matery.css，找到450行左右，修改为如下代码。</p><pre><code>@keyframes rainbow {    0%,    100% {        background: rgba(66,197,138,0.3);        background: linear-gradient(45deg, rgba(66,197,138,0.3) 0%, rgba(66,197,138, 0.3) 100%);        background: -moz-linear-gradient(135deg, rgba(66,197,138,0.3) 0%, rgba(66,197,138, 0.3) 100%);        background: -webkit-linear-gradient(135deg, rgba(66,197,138,0.3) 0%, rgba(66,197,138, 0.3) 100%);    }    16% {        background: rgba(60,179,113, 0.3);        background: linear-gradient(45deg, rgba(60,179,113, 0.3) 0%, rgba(60,179,113, 0.3) 100%);        background: -moz-linear-gradient(135deg, rgba(60,179,113, 0.3) 0%, rgba(60,179,113, 0.3) 100%);        background: -webkit-linear-gradient(135deg, rgba(60,179,113, 0.3) 0%, rgba(60,179,113, 0.3) 100%);    }    32% {        background: rgba(0,206,209, 0.3);        background: linear-gradient(45deg, rgba(0,206,209, 0.3) 0%, rgba(0,206,209, 0.3) 100%);        background: -moz-linear-gradient(135deg, rgba(0,206,209, 0.3) 0%, rgba(0,206,209, 0.3) 100%);        background: -webkit-linear-gradient(135deg, rgba(0,206,209, 0.3) 0%, rgba(0,206,209, 0.3) 100%);    }    48% {        background: rgba(0,191,255, 0.3);        background: linear-gradient(45deg, rgba(0,191,255, 0.3) 0%, rgba(0,191,255, 0.3) 100%);        background: -moz-linear-gradient(135deg, rgba(0,191,255, 0.3) 0%, rgba(0,191,255, 0.3) 100%);        background: -webkit-linear-gradient(135deg, rgba(0,191,255, 0.3) 0%, rgba(0,191,255, 0.3) 100%);    }    64% {        background: rgba(30,144,255, 0.3);        background: linear-gradient(45deg, rgba(30,144,255, 0.3) 0%, rgba(30,144,255, 0.3) 100%);        background: -moz-linear-gradient(135deg, rgba(30,144,255, 0.3) 0%, rgba(30,144,255, 0.3) 100%);        background: -webkit-linear-gradient(135deg, rgba(30,144,255, 0.3) 0%, rgba(30,144,255, 0.3) 100%);    }    80% {        background: rgba(65,105,225, 0.3);        background: linear-gradient(45deg, rgba(65,105,225, 0.3) 0%, rgba(65,105,225, 0.3) 100%);        background: -moz-linear-gradient(135deg, rgba(65,105,225, 0.3) 0%, rgba(65,105,225, 0.3) 100%);        background: -webkit-linear-gradient(135deg, rgba(65,105,225, 0.3) 0%, rgba(65,105,225, 0.3) 100%);    }}</code></pre><p>这样页面就更好看了。</p><hr><h2 id="七、修改菜单栏图标"><a href="#七、修改菜单栏图标" class="headerlink" title="七、修改菜单栏图标"></a>七、修改菜单栏图标</h2><p>在<code>D:\blog\themes\matery\_config.yml</code>文件中，修改fontawesone图标。</p><pre><code># main menu navigation url and icon# 配置菜单导航的名称、路径和图标icon.menu:  Index:    url: /    icon: fa-home  Tags:    url: /tags    icon: fa-tags  Categories:    url: /categories    icon: fa-bookmark  Archives:    url: /archives    icon: fa-archive  About:    url: /about    icon: fa-user-circle-o  Friends:    url: /friends    icon: fa-users  Contact:    url: /contact    icon: fa-address-book</code></pre><hr><h2 id="八、修改首页预览博文div标签样式"><a href="#八、修改首页预览博文div标签样式" class="headerlink" title="八、修改首页预览博文div标签样式"></a>八、修改首页预览博文div标签样式</h2><p>在<code>matery.css</code>第699行修改为如下代码</p><pre><code>article .card {    border-radius: 8px;    overflow: hidden;}</code></pre><p>如此博文卡片就带上了圆角。</p><p>但是由于隐藏了溢出内容，友链的按钮多余部分也被隐藏了。</p><p><img src="7.png" alt></p><p>为了修改这个bug，打开<code>D:\blog\themes\matery\layout\friends.ejs</code>，在文件中找到div标签，给card标签加入内联css样式。</p><p><code>&lt;div class=&quot;card frind-card&lt;%- ((i % 10) +1) %&gt;&quot; style=&quot;overflow: visible;&quot;&gt;</code></p><p>修改后样式：</p><p><img src="8.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 建站教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 主题 </tag>
            
            <tag> CSS </tag>
            
            <tag> 网站建设 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
